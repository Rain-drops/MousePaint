<?xml version="1.0" encoding="utf-8"?>
    <!-- http://my.oschina.net/kooeasy/blog/484593 -->
<!-- CoordinatorLayout可以用来配合浮动操作按钮的 layout_anchor 和 layout_gravity属性创造出浮动效果 -->
<android.support.design.widget.CoordinatorLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true"
    android:id="@+id/main_content">

    <!--  AppBarLayout 来让Toolbar响应滚动事件。响应滚动事件  -->
    <android.support.design.widget.AppBarLayout
        android:id="@+id/appbar"
        android:layout_width="match_parent"
        android:layout_height="256dp"
        app:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar">
        <!-- android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar" -->

        <!-- 制造toolbar的折叠效果，必须把Toolbar放在CollapsingToolbarLayout中： -->

        <android.support.design.widget.CollapsingToolbarLayout
            android:id="@+id/collapsing_toolbar"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:fitsSystemWindows="true"
            app:contentScrim="?attr/colorPrimary"
            app:expandedTitleMarginEnd="64dp"
            app:expandedTitleMarginStart="48dp"
            app:layout_scrollFlags="scroll|exitUntilCollapsed">
            <!-- 设置的layout_scrollFlags有如下几种选项：
                            scroll: 所有想滚动出屏幕的view都需要设置这个flag- 没有设置这个flag的view将被固定在屏幕顶部。
                            enterAlways: 这个flag让任意向下的滚动都会导致该view变为可见，启用快速“返回模式”。
                            enterAlwaysCollapsed: 当你的视图已经设置minHeight属性又使用此标志时，你的视图只能已最小高度进入，
                                只有当滚动视图到达顶部时才扩大到完整高度。
                            exitUntilCollapsed: 这个标志使视图滚动了,直到“崩溃”在退出前(minHeight)
                            -->

            <ImageView
                android:id="@+id/backdrop"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:fitsSystemWindows="true"
                android:scaleType="centerCrop"
                app:layout_collapseMode="parallax"/>
            <!--  layout_collapseMode (折叠模式) - 有两个值:
                pin -  设置为这个模式时，当CollapsingToolbarLayout完全收缩后，Toolbar还可以保留在屏幕上。
                parallax - 设置为这个模式时，在内容滚动时，CollapsingToolbarLayout中的View（比如ImageView)也可以同时滚动，
                实现视差滚动效果，通常和layout_collapseParallaxMultiplier(设置视差因子)搭配使用。
            -->

            <android.support.v7.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                app:layout_collapseMode="pin"
                app:popupTheme="@style/ThemeOverlay.AppCompat.Light">

            </android.support.v7.widget.Toolbar>

        </android.support.design.widget.CollapsingToolbarLayout>

    </android.support.design.widget.AppBarLayout>

    <!-- 嵌套滑动机制（NestedScrolling） -->
    <!-- 比如你使用了Toolbar，下面一个ScrollView，
    向上滚动隐藏Toolbar，向下滚动显示Toolbar，这里在逻辑上就是一个NestedScrolling -->
    <android.support.v4.widget.NestedScrollView
        android:id="@+id/ns_view"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_margin="10dp"
        app:layout_behavior="@string/appbar_scrolling_view_behavior">
        <!-- 在RecyclerView或者任意支持嵌套滚动的view比如NestedScrollView上添加app:layout_behavior。
        support library包含了一个特殊的字符串资源@string/appbar_scrolling_view_behavior，
        它和AppBarLayout.ScrollingViewBehavior相匹配，用来通知AppBarLayout 这个特殊的view何时发生了滚动事件，
        这个behavior需要设置在触发事件（滚动）的view之上 -->

        <!--  -->
        <com.sgj.john.mousepaint.customview.NormalGridView
            android:id="@+id/lv_detial"
            android:layout_height="match_parent"
            android:layout_width="match_parent"
            android:numColumns="3"
            android:verticalSpacing="0.5dp"
            android:horizontalSpacing="0.5dp"
            android:background="#dfdfdf"
            app:layout_behavior="@string/appbar_scrolling_view_behavior"
            android:layout_marginBottom="4dp">

        </com.sgj.john.mousepaint.customview.NormalGridView>

    </android.support.v4.widget.NestedScrollView>

    <!-- 一个有一些阴影的圆形按钮 -->
    <android.support.design.widget.FloatingActionButton
        android:id="@+id/fab_sub"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:src="@drawable/ic_add_white_24dp"
        android:layout_margin="@dimen/fab_margin"
        android:clickable="true"
        app:backgroundTint="@color/material_red"
        app:rippleColor="@color/material_orange"
        app:layout_anchor="@id/appbar"
        app:layout_anchorGravity="bottom|right|end"/>
    <!-- app:layout_anchor="@id/appbar" :
     FAB浮动按钮显示在哪个布局区域-->
    <!-- app:layout_anchorGravity="bottom|right|end" :
     FAB浮动按钮在这个布局区域的具体位置-->


</android.support.design.widget.CoordinatorLayout>
